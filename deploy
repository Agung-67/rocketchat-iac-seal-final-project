#!/bin/bash

set -e

if [ "$(id -u)" -ne 0 ]; then
  echo "Error: Skrip ini harus dijalankan sebagai root." >&2
  exit 1
fi

show_help() {
  cat <<EOF
Usage: $0 [options]

Options:
  --task-all          Jalankan semua task (default).
  --skip-apply        Lewati 'terraform apply'.
  --skip-ansible      Lewati task Ansible.
  --plan-only         Jalankan 'terraform plan' saja.
  --var-file=<file>   File variabel Terraform (default: .env.example).
  --env=<file>        Tentukan file environment (default: development.env).
  --help              Tampilkan bantuan.
EOF
}

log() { echo "[$(date +'%Y-%m-%d %H:%M:%S')] $@"; }

run_terraform() {
  log "Inisialisasi Terraform"
  terraform init

  local var_file_opt=""
  [[ -n "$VAR_FILE" ]] && var_file_opt="-var-file=environment/$VAR_FILE"

  if [[ "$PLAN_ONLY" == true ]]; then
    log "Menjalankan terraform plan $var_file_opt"
    terraform plan $var_file_opt
  elif [[ "$SKIP_APPLY" == false ]]; then
    log "Menjalankan terraform apply $var_file_opt"
    terraform apply -auto-approve $var_file_opt
  else
    log "Lewati terraform apply (--skip-apply)"
  fi
}

run_ansible() {
  log "Menjalankan playbook Ansible dengan environment file: environment/$ENV_FILE"
  ansible-playbook ./playbooks/setup/main.yaml --extra-vars "@/$(realpath environment/$ENV_FILE)"
}

setup_python_env() {
  log "Menyiapkan Python Virtual Environment (.venv)"
  [[ -d .venv ]] || python3 -m venv .venv
  [[ -f requirements.txt ]] && ./.venv/bin/pip install -r requirements.txt
}

# Default flags
TASK_ALL=true
SKIP_APPLY=false
SKIP_ANSIBLE=false
PLAN_ONLY=false
VAR_FILE=".env.example"
ENV_FILE="development.env"

while [[ "$#" -gt 0 ]]; do
  case $1 in
    --task-all) TASK_ALL=true ;;
    --skip-apply) SKIP_APPLY=true ;;
    --skip-ansible) SKIP_ANSIBLE=true ;;
    --plan-only) PLAN_ONLY=true ;;
    --var-file=*) VAR_FILE="${1#*=}" ;;
    --env=*) ENV_FILE="${1#*=}" ;;
    --help) show_help; exit 0 ;;
    *) echo "Unknown option: $1"; show_help; exit 1 ;;
  esac
  shift
done

setup_python_env

if [[ "$TASK_ALL" == true || "$PLAN_ONLY" == true || "$SKIP_APPLY" == false ]]; then
  run_terraform
fi

if [[ "$TASK_ALL" == true && "$SKIP_ANSIBLE" == false ]]; then
  run_ansible
fi

log "Deployment selesai."
